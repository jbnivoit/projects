diff -u -r -N GMp3sb/Makefile.am ../../mp3sb_client/GMp3sb/Makefile.am
--- GMp3sb/Makefile.am	Wed May 17 21:44:07 2000
+++ ../../mp3sb_client/GMp3sb/Makefile.am	Sun Sep 10 12:33:47 2000
@@ -1,6 +1,6 @@
 ## Process this file with automake to produce Makefile.in
 
-SUBDIRS = intl po src
+SUBDIRS = intl po src gnomemp3sb
 
 install-data-local:
 	@$(NORMAL_INSTALL)
diff -u -r -N GMp3sb/configure.in ../../mp3sb_client/GMp3sb/configure.in
--- GMp3sb/configure.in	Wed May 17 21:44:07 2000
+++ ../../mp3sb_client/GMp3sb/configure.in	Sun Sep 10 12:35:16 2000
@@ -53,5 +53,6 @@
 src/Makefile
 intl/Makefile
 po/Makefile.in
+gnomemp3sb/Makefile
 ])
 
diff -u -r -N GMp3sb/gnomemp3sb/Makefile.am ../../mp3sb_client/GMp3sb/gnomemp3sb/Makefile.am
--- GMp3sb/gnomemp3sb/Makefile.am	Wed Dec 31 23:00:00 1969
+++ ../../mp3sb_client/GMp3sb/gnomemp3sb/Makefile.am	Sun Sep 10 12:49:22 2000
@@ -0,0 +1,21 @@
+bin_PROGRAMS = gnomemp3sb
+
+gnomemp3sb_LDADD = @GTK_LIBS@ @GNOME_LIBDIR@ @GNOMEGNORBA_LIBS@ \
+-lpanel_applet 
+INCLUDES = @GTK_CFLAGS@ $(GNOME_INCLUDEDIR)
+
+gnomemp3sb_SOURCES = gnomemp3sb.c
+
+EXTRA_DIST = gnomemp3sb.c gnomemp3sb.desktop gnomemp3sb.gnorba gnomemp3sb.xpm mp3sb-dock-master.xpm
+
+sysdir = @GNOME_DATADIR@/applets/Multimedia
+sys_DATA = gnomemp3sb.desktop
+
+gnorbadir = @GNOME_SYSCONFDIR@/CORBA/servers
+gnorba_DATA = gnomemp3sb.gnorba
+
+sysdatadir = $(datadir)/applets/Multimedia
+sysdata_DATA = gnomemp3sb.desktop
+
+gnorbadatadir = $(sysconfdir)/CORBA/servers
+gnorbadata_DATA = gnomemp3sb.gnorba
diff -u -r -N GMp3sb/gnomemp3sb/gnomemp3sb.c ../../mp3sb_client/GMp3sb/gnomemp3sb/gnomemp3sb.c
--- GMp3sb/gnomemp3sb/gnomemp3sb.c	Wed Dec 31 23:00:00 1969
+++ ../../mp3sb_client/GMp3sb/gnomemp3sb/gnomemp3sb.c	Sun Sep 10 14:03:15 2000
@@ -0,0 +1,629 @@
+/*  gnomemp3sb - mp3 server box client gnome applet
+ * 
+ *  This applet was inspired from the gnomexmms applet in the XMMS distribution which is 
+ *  Copyright (C) 1998-2000  Peter Alm, Mikael Alm, Olle Hallnas, Thomas Nilsson and 4Front Technologies
+ *
+ *  Some code snippets are from the curses mp3sb client from Gerd Knorr <kraxel@goldbach.in-berlin.de>.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+#include <gtk/gtk.h>
+#include <gdk/gdkx.h>
+#include <X11/Xlib.h>
+#include <X11/Xatom.h>
+#include "config.h"
+#include <gnome.h>
+#include <applet-widget.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
+#include <errno.h>
+#include <locale.h>
+#include <stdarg.h>
+#include <ctype.h>
+#include <signal.h>
+#include <termios.h>
+#include <sys/time.h>
+#include <sys/ioctl.h>
+#include <sys/types.h>
+#include <pwd.h>
+
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <arpa/inet.h>
+#include <netdb.h>
+
+#include "mp3sb-dock-master.xpm"
+#include "gnomemp3sb.xpm"
+
+typedef struct {
+	gint x, y, width, height, pressed_x, pressed_y, normal_x, normal_y;
+	gboolean focus, pressed;
+	void (*callback) (void);
+} Button;
+
+static void action_play(void);
+static void action_pause(void);
+static void action_eject(void);
+static void action_prev(void);
+static void action_next(void);
+static void action_stop(void);
+
+static Button buttons[] = {
+	{21 - 9, 28 - 9, 9, 11, 20, 64, 0, 64, FALSE, FALSE, action_play},	/* PLAY */
+	{33 - 9, 28 - 9, 9, 11, 30, 64, 10, 64, FALSE, FALSE, action_pause},	/* PAUSE */
+	{45 - 9, 28 - 9, 9, 11, 20, 75, 0, 75, FALSE, FALSE, action_eject},	/* EJECT */
+	{21 - 9, 42 - 9, 9, 11, 20, 86, 0, 86, FALSE, FALSE, action_prev},	/* PREV */
+	{33 - 9, 42 - 9, 9, 11, 30, 86, 10, 86, FALSE, FALSE, action_next},	/* NEXT */
+	{45 - 9, 42 - 9, 9, 11, 30, 75, 10, 75, FALSE, FALSE, action_stop}	/* STOP */
+};
+
+#define NUM_BUTTONS 6
+
+static GList *button_list;
+
+#define VOLSLIDER_X		11-9
+#define VOLSLIDER_Y		12-9
+#define VOLSLIDER_WIDTH		6
+#define VOLSLIDER_HEIGHT	40
+
+#define SEEKSLIDER_X		21-9
+#define SEEKSLIDER_Y		16-9
+#define SEEKSLIDER_WIDTH	30
+#define SEEKSLIDER_HEIGHT	7
+#define SEEKSLIDER_KNOB_WIDTH	3
+#define SEEKSLIDER_MAX		(SEEKSLIDER_WIDTH - SEEKSLIDER_KNOB_WIDTH)
+
+static gboolean volslider_dragging = FALSE;
+static gint volslider_pos = 100;
+static gboolean seekslider_visible = FALSE, seekslider_dragging = FALSE;
+static gint seekslider_pos = -1, seekslider_drag_offset = 0;
+static gint timeout_tag = 0;
+
+static void init(void);
+
+static GtkWidget *applet, *window, *vbox;
+static GdkPixmap *pixmap, *launch_pixmap;
+static GdkBitmap *mask, *launch_mask;
+static GdkGC *dock_gc;
+
+static char   *mp3server = "localhost";
+static gint mp3sb_socket = 0;
+static gboolean mp3sb_running = TRUE;
+
+static gboolean single_click = FALSE;
+
+static GtkTargetEntry drop_types[] = {
+	{"text/plain", 0, 1}
+};
+
+static void panic(char *fmt, ...)
+{
+    va_list list;
+    va_start(list,fmt);
+    fprintf(stderr,"PANIC: ");
+    vfprintf(stderr,fmt,list);
+    fprintf(stderr,"\n");
+    va_end(list);
+    exit(EXIT_FAILURE);
+}
+
+static void string_to_ipaddr(char *name, struct sockaddr_in *addr)
+{
+    struct hostent *host;
+
+    /* try to parse it it dotted number ... */
+    if (-1 == (addr->sin_addr.s_addr = inet_addr(name))) {
+
+	/* ... failing that do a DNS lookup */
+	if (NULL == (host = gethostbyname(name))) {
+	    fprintf(stderr,"can't resolve hostname %s\n",name);
+	    exit(1);
+	}
+	addr->sin_addr = *(struct in_addr *) host->h_addr;
+    }
+}
+    
+void action_play(void)
+{
+  write(mp3sb_socket,"PLAY\r\n",6);
+}
+
+void action_pause(void)
+{
+  write(mp3sb_socket,"PAUSE\r\n",7);
+}
+
+void action_eject(void)
+{
+  /* no-op */
+  action_stop();
+  exit(EXIT_SUCCESS); /* is this appropriate? */
+}
+
+void action_prev(void)
+{
+  write(mp3sb_socket,"PLAY-\r\n",7);
+}
+
+void action_next(void)
+{
+  write(mp3sb_socket,"PLAY+\r\n",7);
+}
+
+void action_stop(void)
+{
+  write(mp3sb_socket,"PAUSE\r\n",6); /* how do we 'STOP' ? there seems to be no primitive in the protocol to do that! */
+}
+
+static gboolean inside_region(gint mx, gint my, gint x, gint y, gint w, gint h)
+{
+	if ((mx >= x && mx < x + w) && (my >= y && my < y + h))
+		return TRUE;
+
+	return FALSE;
+}
+
+static void draw_button(Button * button)
+{
+	if (button->pressed)
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, button->pressed_x, button->pressed_y, button->x, button->y, button->width, button->height);
+	else
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, button->normal_x, button->normal_y, button->x, button->y, button->width, button->height);
+}
+
+static void draw_buttons(GList * list)
+{
+	for (; list; list = g_list_next(list))
+		draw_button(list->data);
+}
+
+static void draw_volslider(void)
+{
+	gdk_draw_pixmap(window->window, dock_gc, pixmap, 48, 65, VOLSLIDER_X, VOLSLIDER_Y, VOLSLIDER_WIDTH, VOLSLIDER_HEIGHT);
+	gdk_draw_pixmap(window->window, dock_gc, pixmap, 42, 65 + VOLSLIDER_HEIGHT - volslider_pos, VOLSLIDER_X, VOLSLIDER_Y + VOLSLIDER_HEIGHT - volslider_pos, VOLSLIDER_WIDTH, volslider_pos);
+}
+
+static void draw_seekslider(void)
+{
+	gint slider_x;
+
+	if (seekslider_visible)
+	{
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, 2, 114, 19 - 9, 12 - 9, 35, 14);
+		if (seekslider_pos < SEEKSLIDER_MAX / 3)
+			slider_x = 44;
+		else if (seekslider_pos < (SEEKSLIDER_MAX * 2) / 3)
+			slider_x = 47;
+		else
+			slider_x = 50;
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, slider_x, 112, SEEKSLIDER_X + seekslider_pos, SEEKSLIDER_Y, 3, SEEKSLIDER_HEIGHT);
+	}
+	else
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, 2, 100, 19 - 9, 12 - 9, 35, 14);
+}
+
+static void redraw_window(void)
+{
+	if (mp3sb_running)
+	{
+		gdk_draw_pixmap(window->window, dock_gc, pixmap, 9, 9, 0, 0, 64, 64);
+		draw_buttons(button_list);
+		draw_volslider();
+		draw_seekslider();
+	}
+	else
+	{
+		gdk_draw_pixmap(window->window, dock_gc, launch_pixmap, 0, 0, 0, 0, 64, 64);
+	}
+}
+
+static void expose_cb(GtkWidget * w, GdkEventExpose * event, gpointer data)
+{
+	redraw_window();
+}
+
+static void mp3sb_remote_set_main_volume(int socket, int value)
+{
+  char buf[12];
+  if(value<=100)
+    {
+      sprintf(&buf[0],"VOL %d\r\n",value);
+      write(socket,buf,strlen(buf));
+    }
+}
+
+static void mp3sb_remote_get_volume(int socket, int *vl, int *vr)
+{
+  if(vl!=NULL && vr!=NULL)
+    {
+      char buf[100];
+      int ok=0;
+
+      write(socket,"VOL\r\n",6);
+      read(socket,&buf[0],100);
+      if((ok=sscanf(buf,"Ok\nOk : %d",vr))!=1) /* expect 'Ok' from previous command */
+	ok = sscanf(buf,"Ok : %d",vr); /* if that didn't work, try this one */
+      if(ok!=0) 
+	{
+	  *vl = *vr;
+	  /*printf("vol: %d (%s)\n",*vl,buf);*/
+	}
+    }
+}
+static int mp3sb_remote_get_playlist_time(int socket)
+{
+  char response[100];
+  char state[16];
+  int id=0,pos=0,percent=0,min=0,sec=0;
+
+  write(socket,"STATUS\r\n",8);
+  read(socket,&response[0],100);
+  
+  if (6 == sscanf(response,"%15[^|]|%d|%d|%d|%d:%d",state,&id,&pos,&percent,&min,&sec)) 
+    {
+      return (min*60+sec)*100/percent;
+    }
+  return 0;
+}
+
+static void mp3sb_remote_jump_to_time(int socket, int where)
+{
+  char buf[100];
+  if(where<=100) 
+    {  
+      sprintf(&buf[0],"SEEK %d\r\n",where);
+      write(socket,buf,strlen(buf));
+    }
+}
+
+static int mp3sb_remote_get_output_time(int socket)
+{
+  char response[100];
+  char state[16];
+  int id=0,pos=0,percent=0,min=0,sec=0;
+
+  write(socket,"STATUS\r\n",8);
+  read(socket,&response[0],100);
+  
+  if (6 == sscanf(response,"%15[^|]|%d|%d|%d|%d:%d",state,&id,&pos,&percent,&min,&sec)) 
+    {
+      return (min*60+sec);
+    }
+  return 0;
+}
+
+static void button_press_cb(GtkWidget * w, GdkEventButton * event, gpointer data)
+{
+	GList *node;
+	Button *btn;
+	gint pos;
+	gchar *cmd;
+
+	if (mp3sb_running)
+	{
+		for (node = button_list; node; node = g_list_next(node))
+		{
+			btn = node->data;
+			if (inside_region(event->x, event->y, btn->x, btn->y, btn->width, btn->height))
+			{
+				btn->focus = TRUE;
+				btn->pressed = TRUE;
+				draw_button(btn);
+			}
+		}
+		if (inside_region(event->x, event->y, VOLSLIDER_X, VOLSLIDER_Y, VOLSLIDER_WIDTH, VOLSLIDER_HEIGHT))
+		{
+			volslider_pos = VOLSLIDER_HEIGHT - (event->y - VOLSLIDER_Y + 17);
+			mp3sb_remote_set_main_volume(mp3sb_socket, (volslider_pos * 100) / VOLSLIDER_HEIGHT);
+			draw_volslider();
+			volslider_dragging = TRUE;
+		}
+		if (inside_region(event->x, event->y, SEEKSLIDER_X, SEEKSLIDER_Y, SEEKSLIDER_WIDTH, SEEKSLIDER_HEIGHT) && seekslider_visible)
+		{
+			pos = event->x - SEEKSLIDER_X + 17;
+
+			if (pos >= seekslider_pos && pos < seekslider_pos + SEEKSLIDER_KNOB_WIDTH)
+				seekslider_drag_offset = pos - seekslider_pos;
+			else
+			{
+				seekslider_drag_offset = 1;
+				seekslider_pos = pos - seekslider_drag_offset;
+				if (seekslider_pos < 0)
+					seekslider_pos = 0;
+				if (seekslider_pos > SEEKSLIDER_MAX)
+					seekslider_pos = SEEKSLIDER_MAX;
+			}
+			draw_seekslider();
+			seekslider_dragging = TRUE;
+		}
+	}
+
+}
+
+static void button_release_cb(GtkWidget * w, GdkEventButton * event, gpointer data)
+{
+	GList *node;
+	Button *btn;
+	gint len;
+
+	if (event->button != 1)
+		return;
+
+	for (node = button_list; node; node = g_list_next(node))
+	{
+		btn = node->data;
+		if (btn->pressed)
+		{
+			btn->focus = FALSE;
+			btn->pressed = FALSE;
+			draw_button(btn);
+			if (btn->callback)
+				btn->callback();
+		}
+	}
+	volslider_dragging = FALSE;
+	if (seekslider_dragging)
+	{
+		len = mp3sb_remote_get_playlist_time(mp3sb_socket);
+		mp3sb_remote_jump_to_time(mp3sb_socket, ((seekslider_pos * len) / SEEKSLIDER_MAX));
+		seekslider_dragging = FALSE;
+	}
+}
+
+static void motion_notify_cb(GtkWidget * w, GdkEventMotion * event, gpointer data)
+{
+	GList *node;
+	Button *btn;
+	gboolean inside;
+
+	for (node = button_list; node; node = g_list_next(node))
+	{
+		btn = node->data;
+		if (btn->focus)
+		{
+			inside = inside_region(event->x, event->y, btn->x, btn->y, btn->width, btn->height);
+			if ((inside && !btn->pressed) || (!inside && btn->pressed))
+			{
+				btn->pressed = inside;
+				draw_button(btn);
+			}
+		}
+	}
+
+	if (volslider_dragging)
+	{
+		volslider_pos = VOLSLIDER_HEIGHT - (event->y - VOLSLIDER_Y + 17);
+		if (volslider_pos < 0)
+			volslider_pos = 0;
+		if (volslider_pos > VOLSLIDER_HEIGHT)
+			volslider_pos = VOLSLIDER_HEIGHT;
+		mp3sb_remote_set_main_volume(mp3sb_socket, (volslider_pos * 100) / VOLSLIDER_HEIGHT);
+		draw_volslider();
+	}
+	if (seekslider_dragging)
+	{
+		seekslider_pos = (event->x - SEEKSLIDER_X) - seekslider_drag_offset + 17;
+		if (seekslider_pos < 0)
+			seekslider_pos = 0;
+		if (seekslider_pos > SEEKSLIDER_MAX)
+			seekslider_pos = SEEKSLIDER_MAX;
+		draw_seekslider();
+	}
+}
+static gint timeout_func(gpointer data)
+{
+	gint vl=0, vr=0, new_pos=0, pos=0, len=0;
+	gboolean running=1, playing=1;
+
+	/* we assume that the mp3sb server is always running & playing, if someone wants to
+	   lift that restriction, they're welcome to do so */
+
+	if (running)
+	{
+		if (!mp3sb_running)
+		{
+			mp3sb_running = running;
+			redraw_window();
+		}
+		if (!volslider_dragging)
+		{
+		  mp3sb_remote_get_volume(mp3sb_socket, &vl, &vr);
+		  new_pos = ((vl > vr ? vl : vr) * 40) / 100;
+		  if (new_pos < 0)
+		    new_pos = 0;
+		  if (new_pos > VOLSLIDER_HEIGHT)
+		    new_pos = VOLSLIDER_HEIGHT;
+		  
+		  if (volslider_pos != new_pos)
+		    {
+		      volslider_pos = new_pos;
+		      draw_volslider();
+		    }
+		}
+
+		/*		playing = mp3sb_remote_is_playing(mp3sb_socket);*/
+		/* this is not supported */
+
+		if (!playing && seekslider_visible)
+		{
+			seekslider_visible = FALSE;
+			seekslider_dragging = FALSE;
+			seekslider_pos = -1;
+			draw_seekslider();
+		}
+		else if (playing)
+		{
+			seekslider_visible = TRUE;
+			len = mp3sb_remote_get_playlist_time(mp3sb_socket);
+			if (len == -1 && seekslider_visible)
+			{
+				seekslider_visible = FALSE;
+				seekslider_dragging = FALSE;
+				seekslider_pos = -1;
+				draw_seekslider();
+			}
+			else if (!seekslider_dragging)
+			{
+			  pos = mp3sb_remote_get_output_time(mp3sb_socket);
+				if (len != 0)
+					new_pos = (pos * SEEKSLIDER_MAX) / len;
+				else
+					new_pos = 0;
+				if (new_pos < 0)
+					new_pos = 0;
+				if (new_pos > SEEKSLIDER_MAX)
+					new_pos = SEEKSLIDER_MAX;
+				if (seekslider_pos != new_pos)
+				{
+					seekslider_pos = new_pos;
+					draw_seekslider();
+				}
+			}
+		}
+	}
+	else
+	{
+		if (mp3sb_running)
+		{
+			mp3sb_running = FALSE;
+			redraw_window();
+		}
+	}
+
+	return TRUE;
+}
+
+void init(void)
+{
+	GdkColor bg_color;
+	gint i;
+
+	volslider_dragging = FALSE;
+	volslider_pos = 0;
+
+	seekslider_visible = FALSE;
+	seekslider_dragging = FALSE;
+	seekslider_pos = -1;
+	seekslider_drag_offset = 0;
+
+	for (i = 0; i < NUM_BUTTONS; i++)
+		button_list = g_list_append(button_list, &buttons[i]);
+
+	window = gtk_drawing_area_new();
+	gtk_widget_set_usize(window, 48, 48);
+	gtk_widget_set_app_paintable(window, TRUE);
+	vbox = gtk_vbox_new(TRUE, 0);
+	gtk_box_pack_start(GTK_BOX(vbox), window, TRUE, TRUE, 0);
+	gtk_widget_show(window);
+	gtk_widget_set_events(window, GDK_EXPOSURE_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK | GDK_BUTTON_MOTION_MASK);
+	gtk_signal_connect(GTK_OBJECT(window), "expose_event", GTK_SIGNAL_FUNC(expose_cb), NULL);
+	gtk_signal_connect(GTK_OBJECT(window), "button_press_event", GTK_SIGNAL_FUNC(button_press_cb), NULL);
+	gtk_signal_connect(GTK_OBJECT(window), "button_release_event", GTK_SIGNAL_FUNC(button_release_cb), NULL);
+	gtk_signal_connect(GTK_OBJECT(window), "motion_notify_event", GTK_SIGNAL_FUNC(motion_notify_cb), NULL);
+
+	bg_color.red = 0;
+	bg_color.green = 0;
+	bg_color.blue = 0;
+	gdk_colormap_alloc_color(gdk_colormap_get_system(), &bg_color, FALSE, TRUE);
+	gdk_window_set_background(applet->window, &bg_color);
+	gdk_window_clear(applet->window);
+	dock_gc = gdk_gc_new(applet->window);
+
+	/* FIXME: add colormap and window */
+	pixmap = gdk_pixmap_create_from_xpm_d(applet->window, &mask, NULL, mp3sb_dock_master_xpm);
+
+	launch_pixmap = gdk_pixmap_create_from_xpm_d(applet->window, &launch_mask, NULL, gnomemp3sb);
+	gtk_widget_show(vbox);
+	timeout_tag = gtk_timeout_add(100, timeout_func, NULL);
+
+	{
+	  int len = 0;
+	  struct sockaddr_in  addr;
+	  char *h=NULL;
+
+	  if (NULL != (h = getenv("MP3SERVER"))) mp3server = h;
+	  
+	  /* MP3 */
+	  addr.sin_family = AF_INET;
+	  addr.sin_port = htons(2345); /* 2345 is the default mp3sb port */
+	  string_to_ipaddr(mp3server,&addr);
+	  if (-1 == (mp3sb_socket = socket(PF_INET, SOCK_STREAM, 0)))
+	    panic("socket: %s",strerror(errno));
+	  len = sizeof(addr);
+	  if (-1 == connect(mp3sb_socket,(struct sockaddr*)&addr,len))
+	    panic("connect(%s:2345): %s",mp3server,strerror(errno));
+	  
+	  /* advertise client version & username */
+	  { 
+	    uid_t self = getuid();
+	    struct passwd *pass = getpwuid(self);
+	    
+	    if(pass->pw_name!=NULL && pass->pw_name[0]!='\0')
+	      {
+		write(mp3sb_socket,"HELLO gnomemp3sb ",17);
+		write(mp3sb_socket,pass->pw_name,strlen(pass->pw_name));
+		write(mp3sb_socket,"\r\n",2);
+	      }
+	    else
+	      write(mp3sb_socket,"HELLO gnomemp3sb unknown\r\n",26);
+	  }
+	}
+}
+
+static void about(AppletWidget * applet, gpointer data)
+{
+	static const char *authors[] =
+	{"Jean-Baptiste Nivoit <jbn@multimania.com>", NULL};
+	GtkWidget *about_box;
+
+	/* there is so little code in here that i'd better leave the copyright to Anders */
+	about_box = gnome_about_new(_("mp3sb applet"), "1.0",
+				    _("Copyright (C) Anders Carlsson 1999"),
+				    authors,
+				    _("A simple mp3sb gnome panel applet by Jean-Baptiste Nivoit\nSome code is from wmmp3sb by Mikael Alm,\nsome from gnomexmms by Anders Carlsson."), NULL);
+
+	gtk_widget_show(about_box);
+}
+
+int main(int argc, char **argv)
+{
+#if defined(PACKAGE) && defined(GNOMELOCALEDIR)
+	bindtextdomain (PACKAGE, GNOMELOCALEDIR);
+	textdomain (PACKAGE);
+#endif
+
+	applet_widget_init("gnomemp3sb", "1.0", argc, argv, NULL, 0, NULL);
+
+	applet = applet_widget_new("gnomemp3sb");
+	gtk_widget_realize(applet);
+
+	init();
+
+	applet_widget_add(APPLET_WIDGET(applet), vbox);
+	gtk_widget_show(applet);
+
+	applet_widget_register_stock_callback(APPLET_WIDGET(applet),
+					    "about", GNOME_STOCK_MENU_ABOUT,
+					      _("About..."), about, NULL);
+
+	applet_widget_gtk_main();
+	return 0;
+}
+
+
+
diff -u -r -N GMp3sb/gnomemp3sb/gnomemp3sb.xpm ../../mp3sb_client/GMp3sb/gnomemp3sb/gnomemp3sb.xpm
--- GMp3sb/gnomemp3sb/gnomemp3sb.xpm	Wed Dec 31 23:00:00 1969
+++ ../../mp3sb_client/GMp3sb/gnomemp3sb/gnomemp3sb.xpm	Sun Sep 10 12:44:04 2000
@@ -0,0 +1,53 @@
+/* XPM */
+static char * gnomemp3sb[] = {
+"48 48 2 1",
+" 	c None",
+".	c #000000",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................",
+"................................................"};
diff -u -r -N GMp3sb/gnomemp3sb/mp3sb-dock-master.xpm ../../mp3sb_client/GMp3sb/gnomemp3sb/mp3sb-dock-master.xpm
--- GMp3sb/gnomemp3sb/mp3sb-dock-master.xpm	Wed Dec 31 23:00:00 1969
+++ ../../mp3sb_client/GMp3sb/gnomemp3sb/mp3sb-dock-master.xpm	Sun Sep 10 12:06:51 2000
@@ -0,0 +1,178 @@
+/* XPM */
+static char * mp3sb_dock_master_xpm[] = {
+"64 128 47 1",
+" 	c None",
+".	c #000000",
+"+	c #040404",
+"@	c #AEAAAE",
+"#	c #86828E",
+"$	c #FE0000",
+"%	c #F80700",
+"&	c #F7F3FF",
+"*	c #F10D00",
+"=	c #EA1400",
+"-	c #E41A00",
+";	c #DD2100",
+">	c #D72700",
+",	c #D02E00",
+"'	c #CA3400",
+")	c #C33B00",
+"!	c #BD4100",
+"~	c #B64800",
+"{	c #B04E00",
+"]	c #A95500",
+"^	c #A35B00",
+"/	c #9C6200",
+"(	c #966800",
+"_	c #8F6F00",
+":	c #897500",
+"<	c #827C00",
+"[	c #7C8200",
+"}	c #758900",
+"|	c #6F8F00",
+"1	c #689600",
+"2	c #629C00",
+"3	c #5BA300",
+"4	c #55A900",
+"5	c #4EB000",
+"6	c #48B600",
+"7	c #41BD00",
+"8	c #3BC300",
+"9	c #34CA00",
+"0	c #2ED000",
+"a	c #27D700",
+"b	c #21DD00",
+"c	c #1AE400",
+"d	c #14EA00",
+"e	c #0DF100",
+"f	c #07F800",
+"g	c #00FE00",
+"h	c #283C38",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ..............................................+.        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"        ................................................        ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"                                                                ",
+"@@@@@@@@#.@@@@@@@@#.........#.........#.........................",
+"@.........@.................@.........@...$$$$$$................",
+"@.........@.................@.........@...%%%%%%................",
+"@..&......@.&&.&&......&....@...&&.&&.@...******................",
+"@..&&.....@.&&.&&......&&...@...&&.&&.@...======................",
+"@..&&&....@.&&.&&......&&&..@...&&.&&.@...------................",
+"@..&&.....@.&&.&&......&&...@...&&.&&.@...;;;;;;................",
+"@..&......@.&&.&&......&....@...&&.&&.@...>>>>>>................",
+"@.........@.................@.........@...,,,,,,................",
+"@.........@.................@.........@...''''''................",
+"#.........#.........#@@@@@@@@.#@@@@@@@@...))))))................",
+"@@@@@@@@#.@@@@@@@@#.........#.........#...!!!!!!................",
+"@.........@.................@.........@...~~~~~~................",
+"@.........@.................@.........@...{{{{{{................",
+"@...&.....@.&&&&&.......&...@...&&&&&.@...]]]]]]................",
+"@..&&&....@.&&&&&......&&&..@...&&&&&.@...^^^^^^................",
+"@.&&&&&...@.&&&&&.....&&&&&.@...&&&&&.@...//////................",
+"@.........@.&&&&&...........@...&&&&&.@...((((((................",
+"@.&&&&&...@.&&&&&.....&&&&&.@...&&&&&.@...______................",
+"@.........@.................@.........@...::::::................",
+"@.........@.................@.........@...<<<<<<................",
+"#.........#.........#@@@@@@@@.#@@@@@@@@...[[[[[[................",
+"@@@@@@@@#.@@@@@@@@#.........#.........#...}}}}}}................",
+"@.........@.................@.........@...||||||................",
+"@.........@.................@.........@...111111................",
+"@..&..&...@..&..&......&..&.@....&..&.@...222222................",
+"@..&.&&...@..&&.&......&.&&.@....&&.&.@...333333................",
+"@..&&&&...@..&&&&......&&&&.@....&&&&.@...444444................",
+"@..&.&&...@..&&.&......&.&&.@....&&.&.@...555555................",
+"@..&..&...@..&..&......&..&.@....&..&.@...666666................",
+"@.........@.................@.........@...777777................",
+"@.........@.................@.........@...888888................",
+"#.........#.........#@@@@@@@@.#@@@@@@@@...999999................",
+"..........................................000000................",
+"..........................................aaaaaa................",
+"..........................................bbbbbb................",
+"..........................................cccccc................",
+"..........................................dddddd................",
+"..........................................eeeeee................",
+"..........................................ffffff................",
+"..........................................gggggg................",
+"................................................................",
+"................................................................",
+"................................................................",
+"................................................................",
+"................................................................",
+"................................................................",
+"................................................................",
+"............................................777777777...........",
+".............................................7..7..7............",
+"..............................................7.7.7.............",
+"............................................hhhhhhhhh...........",
+"..............................................7.7.7.............",
+".............................................7..7..7............",
+"...#################################........777777777...........",
+"...#...............................#............................",
+"...#...............................#............................",
+"...#hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh#............................",
+"...#...............................#............................",
+"...#...............................#............................",
+"...#################################............................",
+"................................................................",
+"................................................................",
+"................................................................"};
diff -u -r -N GMp3sb/src/Makefile.am ../../mp3sb_client/GMp3sb/src/Makefile.am
--- GMp3sb/src/Makefile.am	Wed May 17 21:44:07 2000
+++ ../../mp3sb_client/GMp3sb/src/Makefile.am	Wed Jul 12 12:32:43 2000
@@ -10,7 +10,7 @@
 	main.c \
 	support.c support.h \
 	interface.c interface.h \
-	callbacks.c callbacks.h
+	callbacks.c callbacks.h mp3db.c mp3sb.h
 
 gmp3sb_LDADD = @GTK_LIBS@ $(INTLLIBS)
 
