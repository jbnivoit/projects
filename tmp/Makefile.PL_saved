# -*- cperl -*-
use ExtUtils::MakeMaker;

my $samples = {
	       Base64Decode => { 'MIME::Base64' => 2.12 },
	       Base64Encode => { 'MIME::Base64' => 2.12 },
#	       CanonicalXML => { 'XML::Canonical' => 0.04 },
	       CopyPath => {},
	       FIGlet => { 'Text::FIGlet' => 1.05 },
	       Gzip => { 'Compress::Zlib' => 1.16 },
	       MD5 => { 'MD5' => 1.7 },
	       MagickConvertJPG => { 'Image::Magick' => 5.41 },
	       PDF => { 'PDF' => 1.11 },
#	       RegisterDLL => {},
	       RenameMP3 => { 'MP3::Info' => 0.91, 'Win32API::File' => 0.08 },
	       SwapFileNames => {},
	       Tar => { 'Archive::Tar' => 0.22 },
	       Tgz => { 'Archive::Tar' => 0.22, 'Compress::Zlib' => 1.16 },
	       Whitespace => { 'Whitespace' => 1.02 },
	       Zip => { 'Archive::Zip' => 0.11 }
	       };

# before writing the makefile, let's check that CLSID's really are unique, this will avoids surprises afterwards...
my %clsids;
map {
  my $clsid = eval "use Win32::ShellExt::$_; Win32::ShellExt::$_->hkeys()->{CLSID}; ";
  if(defined($clsid)) { # might be undefined if module loading failed..
    #print "Win32::ShellExt::$_ => $clsid\n";
    die "duplicate CLSID in Win32::ShellExt::$_ and Win32::ShellExt::".$clsids{$clsid}."\n" if(defined($clsids{$clsid}));
    $clsids{$clsid} = $_;
  }
} sort keys %$samples;

#  map {
#    WriteMakefile(
#  		NAME         => "Win32::ShellExt::$_.pm",
#  		VERSION_FROM => "Win32/ShellExt/$_.pm",
#  		PM => "Win32/ShellExt/$_.pm",
#  		PREREQ_PM => $samples->{$_}
#  	       );
#    } sort keys %$samples;

WriteMakefile(
	      NAME         => [ 'Win32::ShellExt::Base64Decode', 'Win32::ShellExt::Base64Encode' ],
	      VERSION_FROM => [ 'Win32/ShellExt/Base64Decode.pm', 'Win32/ShellExt/Base64Encode.pm' ],
	      PM => [ 'Win32/ShellExt/Base64Decode.pm', 'Win32/ShellExt/Base64Encode.pm' ],
	      PREREQ_PM => { MIME::Base64 => 2.12 },
	     );

